<launch>
  <arg name="use_external_renderer" default="0" />
  <arg name="ignore_collisions" default="false" />
  <arg name="render_stereo" default="0" />
  <arg name="level"/>
  <arg name="gate_locations" default="0"/>
  <env name="CWD" value="$(env PWD)" />
     
  <group ns="/control_nodes">
    <!-- Start human teleoperation nodes -->
    <node name="joy" pkg="joy" type="joy_node"/>
    <node name="keyboard" pkg="keyboard" type="keyboard"/>
    <node name="universal_teleop" pkg="universal_teleop" type="universal_teleop" output="screen">
      <rosparam file="$(find universal_teleop)/launch/example_input_map.yml"/>

      <remap from="output/rateThrust" to="/uav/input/rateThrust"/>
      <remap from="output/takeoff" to="/uav/input/takeoff"/>
      <remap from="output/land" to="/uav/input/land"/>
      <remap from="output/reset" to="/uav/input/reset"/>
    </node>
  </group>

  <!--include core flightgoggles launch file-->
  <include file="$(find flightgoggles)/launch/core.launch">
    <arg name="use_external_renderer" value="$(arg use_external_renderer)"/>
    <arg name="render_stereo" value="$(arg render_stereo)"/>
    <arg name="ignore_collisions" value="$(arg ignore_collisions)"/>
    <arg name="gate_locations" value="$(arg gate_locations)"/>
  </include>

  <node name="reporter" pkg="flightgoggles_reporter" type="reporter.py" output="screen" cwd='node' required="true"/>
  <!-- Launch override settings. Must be placed at end of file to override params set in core launchfile. -->

  <!--For teleoperation, run dynamics in real time-->
  <param name="/use_sim_time" value="true" />
  
  <rosparam command="load" file="$(find flightgoggles)/config/challenges/gate_locations_$(arg gate_locations).yaml"/>
  <rosparam command="load" file="$(find flightgoggles)/config/challenges/challenge_final.yaml"/>  

</launch>


